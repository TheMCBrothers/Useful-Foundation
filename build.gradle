plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id "me.hypherionmc.cursegradle" version "2.0.1"
}

group = 'net.themcbrothers' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'usefulfoundation'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: project.mc_version
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                usefulfoundation {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                usefulfoundation {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'usefulfoundation', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                usefulfoundation {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        // TOP
        name = "tterrag maven"
        url = "https://maven.tterrag.com/"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    if (project.hasProperty('jei_version')) {
        // JEI
        runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
        compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
        compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    }
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "usefulfoundation",
                "Specification-Vendor"    : "themcbrothers",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : "useful-foundation",
                "Implementation-Version"  : "${archiveVersion.get()}",
                "Implementation-Vendor"   : "themcbrothers",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications { PublicationContainer publicationContainer ->
        publicationContainer.register("maven", MavenPublication) { MavenPublication publication ->
            publication.artifacts = [jar]
            publication.version = "$project.mc_version-$project.version"
            publication.artifactId = "useful-foundation"
        }
    }

    repositories {
        maven {
            credentials {
                username = getSecretByKey("nexus_uname")
                password = getSecretByKey("nexus_pwd")
            }

            url "https://nexus.themcbrothers.net/repository/maven-releases/"
        }
    }
}

private String getSecretByKey(String key) {
    File secretFile = file('secrets.properties')

    if (secretFile.canRead()) {
        Properties secretProps = new Properties()
        secretProps.load(new FileInputStream(secretFile))

        return secretProps[key].toString()
    }

    return null
}

// For CurseForge Deployment
curseforge {
    apiKey = getSecretByKey("curseForgeToken") // This should be kept private.
    options {
        forgeGradleIntegration = true
    }
    project {
        id = '355245' // The ID of your project. You can find this on your project Curseforge page
        changelog = file('changelog.txt') // A file can also be set using: changelog = file('changelog.txt')
        releaseType = project.curse_type // beta, alpha, release
        addGameVersion(project.mc_version)
        mainArtifact(jar) {
            displayName = "$project.modname $project.version"
        }
    }
}
