plugins {
    id "idea"
    id "maven-publish"
    id "net.minecraftforge.gradle" version "5.1.+"
    id "me.hypherionmc.cursegradle" version "2.0.1"
    id 'com.modrinth.minotaur' version "2.+"
}

group = "net.themcbrothers" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "usefulfoundation"
version = "${mc_version}-${mod_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: "official", version: project.mc_version

    runs {
        client {
            workingDirectory project.file("run")

            // Recommended logging data for a userdev environment
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"

            // Recommended logging level for the console
            property "forge.logging.console.level", "debug"

            mods {
                usefulfoundation {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")

            // Recommended logging data for a userdev environment
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"

            // Recommended logging level for the console
            property "forge.logging.console.level", "debug"

            mods {
                usefulfoundation {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run")

            // Recommended logging data for a userdev environment
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"

            // Recommended logging level for the console
            property "forge.logging.console.level", "debug"

            args "--mod", "usefulfoundation", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")

            mods {
                usefulfoundation {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir "src/generated/resources"
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://nexus.themcbrothers.net/repository/maven-blamejared"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://nexus.themcbrothers.net/repository/maven-mod"
    }
    maven {
        name = "themcb-nexus"
        url = "https://nexus.themcbrothers.net/repository/maven-releases/"
    }
    maven {
        name = "themcb-nexus-snapshots"
        url = "https://nexus.themcbrothers.net/repository/maven-snapshots/"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then "net.minecraft" it is assumed
    // that the dep is a ForgeGradle "patcher" dependency. And it"s patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    if (project.hasProperty("jei_version")) {
        // JEI
        runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
        compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
        compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    }
    if (project.hasProperty("themcbroslib_version")) {
        // TheMCBrosLib
        implementation fg.deobf("net.themcbrothers:TheMCBrosLib:${themcbroslib_version}")
    }
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "usefulfoundation",
                "Specification-Vendor"    : "themcbrothers",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : "useful-foundation",
                "Implementation-Version"  : "${archiveVersion.get()}",
                "Implementation-Vendor"   : "themcbrothers",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications { PublicationContainer publicationContainer ->
        publicationContainer.register("maven", MavenPublication) { MavenPublication publication ->
            publication.artifacts = [jar]
            publication.version = project.version
            publication.artifactId = "useful-foundation"
        }
    }

    repositories {
        maven {
            credentials {
                username = getSecret("nexus_uname")
                password = getSecret("nexus_pwd")
            }

            url "https://nexus.themcbrothers.net/repository/maven-releases/"
        }
    }
}

private String getSecret(String key) {
    def secret = System.getenv(key)
    if (secret != null) {
        return secret.trim()
    }

    File secretFile = file('secrets.properties')
    if (secretFile.canRead()) {
        Properties secretProps = new Properties()
        secretProps.load(new FileInputStream(secretFile))
        return secretProps.getProperty(key).toString()
    }
    return null
}

// Publish on CurseForge
curseforge {
    apiKey = getSecret("cf_key")

    project {
        id = project.project_id
        changelog = file("changelog.txt")
        releaseType = project.artifact_type
        addGameVersion(project.mc_version)
        mainArtifact(jar) {
            displayName = "${project.modname} ${project.mod_version}"
        }
        relations {
            requiredDependency "themcbroslib"
            optionalDependency "jei"
        }
    }
}

// Publish on Modrinth
modrinth {
    token = getSecret("modrinth_token")
    projectId = project.modrinth_project
    versionType = project.artifact_type
    changelog = file("changelog.txt").text
    uploadFile = jar
    dependencies {
        required.project "themcbroslib"
        optional.project "jei"
    }
}

